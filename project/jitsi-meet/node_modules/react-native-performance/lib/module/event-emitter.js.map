{"version":3,"sources":["event-emitter.ts"],"names":["createEventEmitter","callbacks","Set","addEventListener","callback","add","removeEventListener","delete","emit","event","forEach"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAG,MAAS;AACzC,QAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AAEA,QAAMC,gBAAgB,GAAIC,QAAD,IAA2B;AAClDH,IAAAA,SAAS,CAACI,GAAV,CAAcD,QAAd;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAIF,QAAD,IAA2B;AACrDH,IAAAA,SAAS,CAACM,MAAV,CAAiBH,QAAjB;AACD,GAFD;;AAIA,QAAMI,IAAI,GAAIC,KAAD,IAAc;AACzBR,IAAAA,SAAS,CAACS,OAAV,CAAmBN,QAAD,IAAc;AAC9BA,MAAAA,QAAQ,CAACK,KAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAMA,SAAO;AACLN,IAAAA,gBADK;AAELG,IAAAA,mBAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAtBM","sourcesContent":["type Callback<T> = (entry: T) => void;\n\nexport const createEventEmitter = <T>() => {\n  const callbacks = new Set<Callback<T>>();\n\n  const addEventListener = (callback: Callback<T>) => {\n    callbacks.add(callback);\n  };\n\n  const removeEventListener = (callback: Callback<T>) => {\n    callbacks.delete(callback);\n  };\n\n  const emit = (event: T) => {\n    callbacks.forEach((callback) => {\n      callback(event);\n    });\n  };\n\n  return {\n    addEventListener,\n    removeEventListener,\n    emit,\n  };\n};\n"]}