{"version":3,"sources":["index.ts"],"names":["NativeEventEmitter","NativeModules","Platform","createPerformance","PerformanceReactNativeMark","PerformanceMetric","installResourceLogger","uninstallResourceLogger","RNPerformanceManager","PerformanceObserver","addEntry","performance","OS","emitter","addListener","data","name","startTime","value","setResourceLoggingEnabled","enabled","globalThis"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,aAA7B,EAA4CC,QAA5C,QAA4D,cAA5D;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SACEC,0BADF,EAEEC,iBAFF,QAGO,qBAHP;AAIA,SACEC,qBADF,EAEEC,uBAFF,QAGO,mBAHP;AAKA,MAAM;AAAEC,EAAAA;AAAF,IAA2BP,aAAjC;AACA,MAAM;AAAEQ,EAAAA,mBAAF;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA;AAAjC,IAAiDR,iBAAiB,EAAxE;;AAEA,IAAID,QAAQ,CAACU,EAAT,KAAgB,SAAhB,IAA6BJ,oBAAjC,EAAuD;AACrD,QAAMK,OAAO,GAAG,IAAIb,kBAAJ,CAAuBQ,oBAAvB,CAAhB;AAEAK,EAAAA,OAAO,CAACC,WAAR,CAAoB,MAApB,EAA6BC,IAAD,IAAU;AACpCL,IAAAA,QAAQ,CAAC,IAAIN,0BAAJ,CAA+BW,IAAI,CAACC,IAApC,EAA0CD,IAAI,CAACE,SAA/C,CAAD,CAAR;AACD,GAFD;AAIAJ,EAAAA,OAAO,CAACC,WAAR,CAAoB,QAApB,EAA+BC,IAAD,IAAU;AACtCL,IAAAA,QAAQ,CACN,IAAIL,iBAAJ,CAAsBU,IAAI,CAACC,IAA3B,EAAiC;AAC/BC,MAAAA,SAAS,EAAEF,IAAI,CAACE,SADe;AAE/BC,MAAAA,KAAK,EAAEH,IAAI,CAACG;AAFmB,KAAjC,CADM,CAAR;AAMD,GAPD;AAQD;;AAED,eAAeP,WAAf;AAGA,OAAO,MAAMQ,yBAAyB,GAAG,CAACC,OAAO,GAAG,IAAX,KAAoB;AAC3D,MAAIA,OAAJ,EAAa;AACX;AACAd,IAAAA,qBAAqB,CAACe,UAAD,EAAaV,WAAb,EAA0BD,QAA1B,CAArB;AACD,GAHD,MAGO;AACLH,IAAAA,uBAAuB,CAACc,UAAD,CAAvB;AACD;AACF,CAPM;AASP,SAASZ,mBAAT","sourcesContent":["import { NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { createPerformance } from './performance';\nimport {\n  PerformanceReactNativeMark,\n  PerformanceMetric,\n} from './performance-entry';\nimport {\n  installResourceLogger,\n  uninstallResourceLogger,\n} from './resource-logger';\n\nconst { RNPerformanceManager } = NativeModules;\nconst { PerformanceObserver, addEntry, performance } = createPerformance();\n\nif (Platform.OS === 'android' || RNPerformanceManager) {\n  const emitter = new NativeEventEmitter(RNPerformanceManager);\n\n  emitter.addListener('mark', (data) => {\n    addEntry(new PerformanceReactNativeMark(data.name, data.startTime));\n  });\n\n  emitter.addListener('metric', (data) => {\n    addEntry(\n      new PerformanceMetric(data.name, {\n        startTime: data.startTime,\n        value: data.value,\n      })\n    );\n  });\n}\n\nexport default performance;\nexport type Performance = typeof performance;\n\nexport const setResourceLoggingEnabled = (enabled = true) => {\n  if (enabled) {\n    //@ts-ignore\n    installResourceLogger(globalThis, performance, addEntry);\n  } else {\n    uninstallResourceLogger(globalThis);\n  }\n};\n\nexport { PerformanceObserver };\nexport type {\n  EntryType,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceMetric,\n  PerformanceEntry,\n  PerformanceReactNativeMark,\n  PerformanceResourceTiming,\n} from './performance-entry';\n"]}