{"version":3,"sources":["resource-logger.ts"],"names":["PerformanceResourceTiming","installResourceLogger","context","performance","addEntry","XMLHttpRequest","performanceOriginal","constructor","args","performanceStartTime","onreadystatechange","readyState","DONE","responseURL","responseHeaders","responseEnd","now","contentLength","Object","entries","find","header","toLowerCase","name","startTime","duration","initiatorType","transferSize","parseInt","open","uninstallResourceLogger"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,qBAA1C;AAeA,OAAO,MAAMC,qBAAqB,GAAG,CACnCC,OADmC,EAEnCC,WAFmC,EAGnCC,QAHmC,KAIhC;AACH,MAAIF,OAAO,CAACG,cAAR,IAA0B,CAACH,OAAO,CAACG,cAAR,CAAuBC,mBAAtD,EAA2E;AACzE,UAAMD,cAAN,SAA6BH,OAAO,CAACG,cAArC,CAAoD;AAClDE,MAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAe;AACxB,cAAM,GAAGA,IAAT;AACA,aAAKC,oBAAL,GAA4B,IAA5B;;AAEA,cAAMC,kBAAN,GAA2B,MAAM;AAC/B,cAAI,KAAKC,UAAL,KAAoB,KAAKC,IAA7B,EAAmC;AACjC,gBAAI,KAAKC,WAAL,IAAoB,KAAKC,eAA7B,EAA8C;AAC5C,oBAAMC,WAAW,GAAGZ,WAAW,CAACa,GAAZ,EAApB;AACA,oBAAMC,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKL,eAApB,EAAqCM,IAArC,CACpB,CAAC,CAACC,MAAD,CAAD,KAAcA,MAAM,CAACC,WAAP,OAAyB,gBADnB,CAAtB;AAGAlB,cAAAA,QAAQ,CACN,IAAIJ,yBAAJ,CAA8B;AAC5BuB,gBAAAA,IAAI,EAAE,KAAKV,WADiB;AAE5BW,gBAAAA,SAAS,EAAE,KAAKf,oBAFY;AAG5BgB,gBAAAA,QAAQ,EAAEV,WAAW,GAAG,KAAKN,oBAHD;AAI5BiB,gBAAAA,aAAa,EAAE,gBAJa;AAK5BX,gBAAAA,WAL4B;AAM5BY,gBAAAA,YAAY,EAAEV,aAAa,GAAGW,QAAQ,CAACX,aAAa,CAAC,CAAD,CAAd,CAAX,GAAgC;AAN/B,eAA9B,CADM,CAAR;AAUD;AACF;AACF,SAnBD;AAoBD;;AAEDY,MAAAA,IAAI,CAAC,GAAGrB,IAAJ,EAAe;AACjB,aAAKC,oBAAL,GAA4BN,WAAW,CAACa,GAAZ,EAA5B,CADiB,CAEjB;;AACA,cAAMa,IAAN,CAAW,GAAGrB,IAAd;AACD;;AA/BiD;;AAiCpDH,IAAAA,cAAc,CAACC,mBAAf,GAAqCJ,OAAO,CAACG,cAA7C;AACAH,IAAAA,OAAO,CAACG,cAAR,GAAyBA,cAAzB;AACD;AACF,CA1CM;AA4CP,OAAO,MAAMyB,uBAAuB,GAAI5B,OAAD,IAAkB;AACvD,MAAIA,OAAO,CAACG,cAAR,IAA0BH,OAAO,CAACG,cAAR,CAAuBC,mBAArD,EAA0E;AACxEJ,IAAAA,OAAO,CAACG,cAAR,GAAyBH,OAAO,CAACG,cAAR,CAAuBC,mBAAhD;AACD;AACF,CAJM","sourcesContent":["import { PerformanceResourceTiming } from './performance-entry';\nimport type { PerformanceEntry } from './performance-entry';\nimport type { Performance } from './performance';\n\ninterface XMLHttpRequestType extends XMLHttpRequest {\n  new (...args: any): XMLHttpRequestType;\n  performanceOriginal: XMLHttpRequest;\n  performanceStartTime?: number;\n  responseURL: string;\n  responseHeaders: string[];\n}\ninterface Context {\n  XMLHttpRequest: XMLHttpRequestType;\n}\n\nexport const installResourceLogger = (\n  context: Context,\n  performance: Performance,\n  addEntry: (entry: PerformanceEntry) => PerformanceEntry\n) => {\n  if (context.XMLHttpRequest && !context.XMLHttpRequest.performanceOriginal) {\n    class XMLHttpRequest extends context.XMLHttpRequest {\n      constructor(...args: any) {\n        super(...args);\n        this.performanceStartTime = null;\n\n        super.onreadystatechange = () => {\n          if (this.readyState === this.DONE) {\n            if (this.responseURL && this.responseHeaders) {\n              const responseEnd = performance.now();\n              const contentLength = Object.entries(this.responseHeaders).find(\n                ([header]) => header.toLowerCase() === 'content-length'\n              );\n              addEntry(\n                new PerformanceResourceTiming({\n                  name: this.responseURL,\n                  startTime: this.performanceStartTime,\n                  duration: responseEnd - this.performanceStartTime,\n                  initiatorType: 'xmlhttprequest',\n                  responseEnd,\n                  transferSize: contentLength ? parseInt(contentLength[1]) : 0,\n                })\n              );\n            }\n          }\n        };\n      }\n\n      open(...args: any) {\n        this.performanceStartTime = performance.now();\n        //@ts-ignore\n        super.open(...args);\n      }\n    }\n    XMLHttpRequest.performanceOriginal = context.XMLHttpRequest;\n    context.XMLHttpRequest = XMLHttpRequest;\n  }\n};\n\nexport const uninstallResourceLogger = (context: any) => {\n  if (context.XMLHttpRequest && context.XMLHttpRequest.performanceOriginal) {\n    context.XMLHttpRequest = context.XMLHttpRequest.performanceOriginal;\n  }\n};\n"]}