buildscript {
  ext.kotlin_version = '1.5.31'
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['GiphyReactNativeSDK.kotlinVersion']

  repositories {
    mavenCentral()
    google()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.2.2'
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getExt(name, prefix = 'GiphyReactNativeSDK.') {
  return rootProject.ext.has(prefix + name) ? rootProject.ext.get(prefix + name) : null
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['GiphyReactNativeSDK.' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['GiphyReactNativeSDK.' + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
  buildToolsVersion getExtOrDefault('buildToolsVersion')
  defaultConfig {
    minSdkVersion 21
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
    versionCode 1
    versionName "1.0"

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()

  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(
      projectDir,
      '/../../../node_modules/react-native/android'
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
        parentDir,
        'node_modules/react-native'
      )

      def androidPrebuiltBinaryDir = new File(
        parentDir,
        'node_modules/react-native/android'
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException(
      "${project.name}: unable to locate React Native android sources. " +
        "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

task configureGiphyVideoPlayerAdapter {
  String sdkRoot = new File(projectDir, '..')
  String targetFolder = new File(sdkRoot, 'android/src/main/java/com/giphyreactnativesdk/videoplayeradapter')
  String sdkResources = new File(sdkRoot, 'android/resources')

  // copy the default implementation
  apply from: new File(sdkResources, 'videoplayeradapter/dependencies.gradle')
  project.delete(targetFolder)
  project.copy {
    from new File(sdkResources, 'videoplayeradapter')
    include '**/*.*'
    exclude 'dependencies.gradle'
    into targetFolder
  }

  // replace with a custom adapter
  String videoPlayerAdapter = getExt('videoPlayerAdapter')
  if (!videoPlayerAdapter) {
    return
  }
  String videoPlayerAdaptersPath = getExt('videoPlayerAdaptersPath') ?: sdkResources
  File videoPlayerAdapterFullPath = new File(videoPlayerAdaptersPath, videoPlayerAdapter)
  if (!videoPlayerAdapterFullPath.exists()) {
    throw new GradleException("The video player adapter \"${videoPlayerAdapter}\" " +
      "cannot be found in this \"${videoPlayerAdaptersPath}\" folder.")
  }
  apply from: new File(videoPlayerAdapterFullPath, 'dependencies.gradle')
  project.copy {
    from videoPlayerAdapterFullPath
    include '**/*.*'
    exclude 'dependencies.gradle'
    into targetFolder
  }
}

preBuild.dependsOn configureGiphyVideoPlayerAdapter

dependencies {
  // noinspection GradleDynamicVersion
  api 'com.facebook.react:react-native:+'
  implementation 'com.giphy.sdk:ui:2.3.4'
  implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'
}
