"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GiphyContent = void 0;

var _types = require("./native/types");

function makeGiphyContentRequest(options) {
  return {
    searchQuery: '',
    mediaType: _types.GiphyMediaType.Gif,
    ...options
  };
}

class GiphyContent {
  static search(options) {
    return makeGiphyContentRequest({ ...options,
      requestType: _types.GiphyContentRequestType.Search
    });
  }

  static trending(options) {
    return makeGiphyContentRequest({ ...options,
      requestType: _types.GiphyContentRequestType.Trending
    });
  }

  static trendingGifs(options) {
    return makeGiphyContentRequest({ ...options,
      mediaType: _types.GiphyMediaType.Gif,
      requestType: _types.GiphyContentRequestType.Trending
    });
  }

  static trendingStickers(options) {
    return makeGiphyContentRequest({ ...options,
      mediaType: _types.GiphyMediaType.Sticker,
      requestType: _types.GiphyContentRequestType.Trending
    });
  }

  static trendingText(options) {
    return makeGiphyContentRequest({ ...options,
      mediaType: _types.GiphyMediaType.Text,
      requestType: _types.GiphyContentRequestType.Trending
    });
  }

  static recents(options) {
    return makeGiphyContentRequest({ ...options,
      mediaType: _types.GiphyMediaType.Gif,
      requestType: _types.GiphyContentRequestType.Recents
    });
  }

  static emoji(options) {
    return makeGiphyContentRequest({ ...options,
      mediaType: _types.GiphyMediaType.Sticker,
      requestType: _types.GiphyContentRequestType.Emoji
    });
  }

  static animate(options) {
    return makeGiphyContentRequest({ ...options,
      requestType: _types.GiphyContentRequestType.Animate
    });
  }

}

exports.GiphyContent = GiphyContent;
//# sourceMappingURL=GiphyContent.js.map