"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GiphyDialog = void 0;

var _reactNative = require("react-native");

var _giphyMedia = require("./giphyMedia");

var _noop = require("./utils/noop");

var _GiphyVideoManager = require("./GiphyVideoManager");

var _GiphyDialog = require("./native/GiphyDialog");

function wrapMediaSelectedListener(listener) {
  return e => {
    e.media = (0, _giphyMedia.makeGiphyMedia)(e.media);
    return listener(e);
  };
}

const GiphyDialog = new class extends _reactNative.NativeEventEmitter {
  constructor() {
    super(_GiphyDialog.NativeGiphyDialog); // listener stubs

    this.addListener(_GiphyDialog.GiphyDialogEvent.MediaSelected, _noop.noop);
    this.addListener(_GiphyDialog.GiphyDialogEvent.Dismissed, _noop.noop);
  }

  addListener(eventType, listener) {
    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      rest[_key - 2] = arguments[_key];
    }

    if (eventType !== _GiphyDialog.GiphyDialogEvent.MediaSelected) {
      return super.addListener(eventType, listener, ...rest);
    }

    return super.addListener(eventType, wrapMediaSelectedListener(listener), ...rest);
  }

  configure(config) {
    _GiphyDialog.NativeGiphyDialog.configure(config);
  }

  show() {
    _GiphyVideoManager.GiphyVideoManager.pauseAll();

    _GiphyDialog.NativeGiphyDialog.show();
  }

  hide() {
    _GiphyDialog.NativeGiphyDialog.hide();
  }

}();
exports.GiphyDialog = GiphyDialog;
//# sourceMappingURL=GiphyDialog.js.map