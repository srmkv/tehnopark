import { NativeEventEmitter } from 'react-native';
import { makeGiphyMedia } from './giphyMedia';
import { noop } from './utils/noop';
import { GiphyVideoManager } from './GiphyVideoManager';
import { GiphyDialogEvent, NativeGiphyDialog } from './native/GiphyDialog';

function wrapMediaSelectedListener(listener) {
  return e => {
    e.media = makeGiphyMedia(e.media);
    return listener(e);
  };
}

export const GiphyDialog = new class extends NativeEventEmitter {
  constructor() {
    super(NativeGiphyDialog); // listener stubs

    this.addListener(GiphyDialogEvent.MediaSelected, noop);
    this.addListener(GiphyDialogEvent.Dismissed, noop);
  }

  addListener(eventType, listener) {
    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      rest[_key - 2] = arguments[_key];
    }

    if (eventType !== GiphyDialogEvent.MediaSelected) {
      return super.addListener(eventType, listener, ...rest);
    }

    return super.addListener(eventType, wrapMediaSelectedListener(listener), ...rest);
  }

  configure(config) {
    NativeGiphyDialog.configure(config);
  }

  show() {
    GiphyVideoManager.pauseAll();
    NativeGiphyDialog.show();
  }

  hide() {
    NativeGiphyDialog.hide();
  }

}();
//# sourceMappingURL=GiphyDialog.js.map